name: CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: debian
            container: debian:testing
            install_dependencies: |
              export DEBIAN_FRONTEND="noninteractive"
              apt -y -q update
              apt install -y -qq python3-pip python3-virtualenv
          - name: conda
            container: continuumio/miniconda3
            install_dependencies: |
              conda install -y pip virtualenv
      fail-fast: false
    name: ${{ matrix.name }}
    container: ${{ matrix.container }}
    steps:
      - name: Install git
        run: |
          apt update -y -q
          apt install -y -qq git
      - name: Mark workspace as safe
        run: |
          git config --global --add safe.directory "${GITHUB_WORKSPACE}"
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          ${{ matrix.install_dependencies }}
          which python3
      - name: Install pusimp
        run: |
          python3 -m pip install --break-system-packages .[data,lint,tests]
      - name: Clean build files
        run: |
          git clean -xdf
      - name: Run ruff
        run: |
          python3 -m ruff --exclude applications .
      - name: Run isort
        run: |
          python3 -m isort --check --diff --skip-glob applications .
      - name: Run mypy
        run: |
          python3 -m mypy --exclude applications .
      - name: Run yamllint
        run: |
          python3 -m yamllint -d "{extends: default, rules: {document-start: {present: false}, line-length: disable, truthy: {check-keys: false}}}" .
      - name: Run tests
        run: |
          COVERAGE_FILE=.coverage_data python3 -m coverage run --source=pusimp -m pytest tests/data
          COVERAGE_FILE=.coverage_unit python3 -m coverage run --source=pusimp -m pytest tests/unit
      - name: Check test coverage
        run: |
          python3 -m coverage combine .coverage*
          python3 -m coverage report --show-missing --skip-covered
