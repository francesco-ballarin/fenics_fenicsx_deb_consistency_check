name: CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * WED"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: python-3.7
            python-version: "3.7"
          - name: python-3.8
            python-version: "3.8"
          - name: python-3.9
            python-version: "3.9"
          - name: python-3.10
            python-version: "3.10"
          - name: python-3.11
            python-version: "3.11"
          - name: python-3.12
            python-version: "3.12"
          - name: debian
            container: debian:testing
          - name: conda
            container: continuumio/miniconda3
      fail-fast: false
    name: ${{ matrix.name }}
    container: ${{ matrix.container }}
    steps:
      - name: Install git
        if: matrix.name == 'debian'
        run: |
          apt update -y -q
          apt install -y -qq git
      - name: Mark workspace as safe
        run: |
          git config --global --add safe.directory "${GITHUB_WORKSPACE}"
      - uses: actions/checkout@v4
      - name: Install dependencies (default GitHub actions image)
        if: startsWith(matrix.name, 'python-') == true
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies (debian image)
        if: matrix.name == 'debian'
        run: |
          export DEBIAN_FRONTEND="noninteractive"
          apt -y -q update
          apt install -y -qq python3-pip python3-virtualenv
      - name: Install dependencies (conda image)
        if: matrix.name == 'conda'
        run: |
          conda install -y pip virtualenv
      - name: Install pusimp
        run: |
          if [[ "${{ matrix.name }}" == "debian" ]]; then
            PIP_FLAGS="--break-system-packages"
          else
            PIP_FLAGS=""
          fi
          python3 -m pip install ${PIP_FLAGS} .[data,lint,tests]
        shell: bash
      - name: Clean build files
        run: |
          git clean -xdf
      - name: Run ruff
        run: |
          python3 -m ruff --exclude applications .
      - name: Run isort
        run: |
          python3 -m isort --check --diff --skip-glob applications .
      - name: Run mypy
        run: |
          python3 -m mypy --exclude applications .
      - name: Run yamllint
        run: |
          python3 -m yamllint -d "{extends: default, rules: {document-start: {present: false}, line-length: disable, truthy: {check-keys: false}}}" .
      - name: Run tests
        run: |
          COVERAGE_FILE=.coverage_data python3 -m coverage run --source=pusimp -m pytest tests/data
          COVERAGE_FILE=.coverage_unit python3 -m coverage run --source=pusimp -m pytest tests/unit
      - name: Check test coverage
        run: |
          python3 -m coverage combine .coverage*
          python3 -m coverage report --show-missing --skip-covered

  warn:
    runs-on: ubuntu-latest
    if: github.repository == 'python-pusimp/pusimp' && github.ref == 'refs/heads/main' && github.event_name == 'schedule'
    steps:
      - name: Warn if scheduled workflow is about to be disabled
        uses: fem-on-colab/warn-workflow-about-to-be-disabled-action@main
        with:
          workflow-filename: ci.yml
          days-elapsed: 50
